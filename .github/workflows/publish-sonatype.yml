name: Publish to Sonatype Central (Central Publisher)

on:
  push:
    tags:
      - "v[0-9]+\\.[0-9]+\\.[0-9]+"
      - "v[0-9]+\\.[0-9]+\\.[0-9]+-.*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to checkout and publish (e.g., v2.0.0)"
        required: true
        type: string
        default: ""

permissions:
  contents: read

jobs:
  publish:
    runs-on: ubuntu-latest
    if: |
      !(contains(github.ref_name, 'SNAPSHOT')) && (github.event_name != 'workflow_dispatch' || !contains(github.event.inputs.tag, 'SNAPSHOT'))

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.tag != '' && github.event.inputs.tag) || github.ref }}

      - name: Verify tag exists (only for dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git fetch --tags
          if ! git rev-parse --verify "refs/tags/${{ github.event.inputs.tag }}" > /dev/null; then
            echo "ERROR: Tag '${{ github.event.inputs.tag }}' does not exist"
            echo "Available tags:"
            git tag --sort=-version:refname | head -10
            exit 1
          fi
          echo "Tag '${{ github.event.inputs.tag }}' verified successfully"

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Import GPG key
        run: |
          echo "${{ secrets.MAVEN_GPG_PRIVATE_KEY }}" | gpg --batch --import

      - name: Verify GPG key
        run: |
          gpg --list-secret-keys --keyid-format LONG

      - name: Create Maven settings.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml << 'EOF'
          <?xml version="1.0" encoding="UTF-8"?>
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 
                                        http://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <id>central</id>
                <username>${{ secrets.MAVEN_USERNAME }}</username>
                <password>${{ secrets.MAVEN_CENTRAL_TOKEN }}</password>
              </server>
              <server>
                <id>gpg.passphrase</id>
                <passphrase>${{ secrets.MAVEN_GPG_PASSPHRASE }}</passphrase>
              </server>
            </servers>
          </settings>
          EOF

      - name: Effective settings
        run: mvn help:effective-settings --no-transfer-progress

      - name: Effective POM
        run: mvn help:effective-pom --no-transfer-progress

      - name: Build & publish via central publishing plugin
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.MAVEN_CENTRAL_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        run: |
          mvn clean deploy --batch-mode --no-transfer-progress
